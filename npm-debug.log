0 info it worked if it ends with ok
1 verbose cli [ '/Users/casles/.nvm/versions/node/v7.3.0/bin/node',
1 verbose cli   '/Users/casles/.nvm/versions/node/v7.3.0/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@3.10.10
3 info using node@v7.3.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/casles/casles-object/javascript/Observer',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/casles/.npm/dbind/1.0.0/package.tgz not in flight; packing
9 verbose correctMkdir /Users/casles/.npm correctMkdir not in flight; initializing
10 info lifecycle dbind@1.0.0~prepublish: dbind@1.0.0
11 silly lifecycle dbind@1.0.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/casles/.npm/dbind/1.0.0/package.tgz',
12 verbose tar pack   '/Users/casles/casles-object/javascript/Observer' ]
13 verbose tarball /Users/casles/.npm/dbind/1.0.0/package.tgz
14 verbose folder /Users/casles/casles-object/javascript/Observer
15 verbose addLocalTarball adding from inside cache /Users/casles/.npm/dbind/1.0.0/package.tgz
16 verbose correctMkdir /Users/casles/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd dbind@1.0.0
18 verbose afterAdd /Users/casles/.npm/dbind/1.0.0/package/package.json not in flight; writing
19 verbose correctMkdir /Users/casles/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/casles/.npm/dbind/1.0.0/package/package.json written
21 silly publish { name: 'dbind',
21 silly publish   version: '1.0.0',
21 silly publish   description: '前端组件化mvvm框架',
21 silly publish   main: 'index.js',
21 silly publish   directories: { example: 'example' },
21 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/YiKeYaTu/dbind.git' },
21 silly publish   keywords: [ 'mvvm', 'component' ],
21 silly publish   author: { name: 'casles' },
21 silly publish   license: 'ISC',
21 silly publish   bugs: { url: 'https://github.com/YiKeYaTu/dbind/issues' },
21 silly publish   homepage: 'https://github.com/YiKeYaTu/dbind#readme',
21 silly publish   devDependencies:
21 silly publish    { 'babel-core': '^6.21.0',
21 silly publish      'babel-loader': '^6.2.10',
21 silly publish      'babel-plugin-transform-class-properties': '^6.19.0',
21 silly publish      'babel-preset-es2015': '^6.18.0',
21 silly publish      webpack: '^1.14.0' },
21 silly publish   dependencies: { install: '^0.8.4', 'object-assign': '^4.1.0' },
21 silly publish   readme: '# 简介\n\n- 前端mvvm组件化框架\n\n# 开始\n\n- 引入index.js\n\n````html\n    <body>\n        <div onclick="{{ reverseMsg() }}">\n            {{ msg }}\n        </div>\n    </body>\n````\n\n````javascript\n    var app = Observer.watch(document.getElementsByTagName(\'div\')[0], {\n        msg: \'hello world\',\n        reverseMsg: function() {\n            app.trackingUpdate(() => {}, \'msg\', this.msg.split(\'\').reverse().join(\'\'));\n        }\n    });\n\n````\n\n- 这里的msg将会与app中的第二个对象中的msg参数进行绑定\n- 当对app进行trackingUpdate操作的时候将会触发dom的更新\n\n# 性能\n\n- 该框架并没有用到虚拟dom来优化性能，而是使用了不同的思想来减少dom的操作\n- Observer的watch方法在首次载入时会遍历传入的dom，并为每一个dom节点绑定一个watcher\n- 每个watcher会提取出该dom的model，例如\n\n````html\n    <div data-if="a > b"></div>\n````\n\n- 这里会提取出a，b并且分别以a，b为键将该watcher的reset方法放入一个全局的对象当中\n- 当触发trackingUpdate方法的时候，watcher将会取出重设的键的所有reset函数并且一一执行\n\n# 指令\n\n- data-if data-else data-else-if（控制dom的显示与隐藏，当求值为假的时候该watcher不会继续遍历该dom的子元素）\n\n````html\n    <body>\n        <div data-if="count > 1">\n            hello world\n        </div>\n    </body>\n````\n\n````javascript\n    var app = Observer.watch(document.getElementsByTagName(\'div\')[0], {\n        count: 2\n    });\n\n````\n\n- data-each（循环dom结构，对象可以是普通键值对象或者数组）\n\n````html\n    <body>\n        <div data-each="i in array">\n            {{ array[i] }}\n        </div>\n    </body>\n````\n\n````javascript\n    var app = Observer.watch(document.getElementsByTagName(\'div\')[0], {\n        array: [1, 3, 5]\n    });\n\n````\n- data-html（使该dom的子元素以innerHTML的形式插入）\n\n````html\n    <body>\n        <div data-html>\n            {{ html }}\n        </div>\n    </body>\n````\n\n````javascript\n    var app = Observer.watch(document.getElementsByTagName(\'div\')[0], {\n        html: \'<p>hello world</p>\'\n    });\n\n````\n\n\n# 事件\n\n- 当dom中绑定的事件带有插值表达式的时候，ob.js将会对此事件进行处理(可以传入原生$event对象)\n\n````html\n    <body>\n        <div onclick="{{ handle($event) }}">\n            {{ value }}\n        </div>\n    </body>\n````\n\n````javascript\n    var app = Observer.watch(document.getElementsByTagName(\'div\')[0], {\n        value: 100,\n        handle: function($event) {\n            //\n        }\n    });\n\n````\n\n# 组件\n\n- 创建一个组件\n\n````javascript\n    var component = Observer.createComponent({\n        template: \'<div>{{ name }}</div>\'\n    });\n    Observer.registerComponent(\'App\', component);\n\n````\n\n- 注册一个组件（组件只有被注册之后才能在html里面直接使用）\n\n````javascript\n    Observer.registerComponent(\'App\', component);\n````\n- 使用组件（因为data-from为一个指令，将会直接当作javascript解析所以要想使用字符串必须加上引号）\n- data-from指令不仅可以传入一个组件的注册名字还能直接穿入一个组件\n\n````html\n    <body>\n        <component data-from="\'App\'"></component>\n    </body>\n````\n\n- 在组件之中使用组件\n\n````javascript\n    var button = Observer.createComponent({\n        template: `<button>button</button>`\n    })\n    var component = Observer.createComponent({\n        template: `<div>\n            <component data-from="\'button\'"></component>\n        </div>`,\n        components: {\n            button: button\n        }\n    });\n\n````\n\n- 组件拥有单独的作用域，如果想要向组件传递消息请使用props\n\n````javascript\n    var button = Observer.createComponent({\n        template: `<button>{{ val }}</button>`\n    })\n    var component = Observer.createComponent({\n        data: {\n            val: \'im is a button\'\n        },\n        template: `<div>\n            <component val="{{ val }}" data-from="\'button\'"></component>\n        </div>`,\n        components: {\n            button: button\n        }\n    });\n\n````\n\n- 组件生命周期方法\n````javascript\n    var component = Observer.createComponent({\n        didMount() { // 组件完成渲染\n            console.log(this.refs.ul);\n        },\n        willMount() { // 组件即将完成渲染\n\n        },\n        willUpdate(prev, next) { // 组件即将更新\n\n        },\n        shouldUpdate(prev, next) { // 组件是否应该更新\n\n        },\n        template: `<div>\n            <ul ref="ul">\n            </ul>\n        </div>`\n    });\n\n````\n\n\n    ',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '3e9c7943841bc2b12783439209c31829424611c2',
21 silly publish   _id: 'dbind@1.0.0',
21 silly publish   _shasum: '1951f610e429e0232793ab022c79eb346a9c1f78',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name dbind
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'dbind',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'dbind',
26 silly mapToRegistry   name: 'dbind',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/dbind
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/casles/.npm/dbind/1.0.0/package.tgz
30 verbose request uri https://registry.npmjs.org/dbind
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 09:01:15
33 verbose request using bearer token for auth
34 verbose request id a76666b6e313a56e
35 http request PUT https://registry.npmjs.org/dbind
36 http 403 https://registry.npmjs.org/dbind
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '95',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Sat, 11 Feb 2017 01:01:12 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-hkg6822-HKG',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1486774871.475278,VS0,VE1283',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating /Users/casles/.npm/registry.npmjs.org/dbind on PUT
39 error publish Failed PUT 403
40 verbose stack Error: "You cannot publish over the previously published version 1.0.0." : dbind
40 verbose stack     at makeError (/Users/casles/.nvm/versions/node/v7.3.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/Users/casles/.nvm/versions/node/v7.3.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
40 verbose stack     at Request._callback (/Users/casles/.nvm/versions/node/v7.3.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
40 verbose stack     at Request.self.callback (/Users/casles/.nvm/versions/node/v7.3.0/lib/node_modules/npm/node_modules/request/request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/Users/casles/.nvm/versions/node/v7.3.0/lib/node_modules/npm/node_modules/request/request.js:1048:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/Users/casles/.nvm/versions/node/v7.3.0/lib/node_modules/npm/node_modules/request/request.js:969:12)
41 verbose statusCode 403
42 verbose pkgid dbind
43 verbose cwd /Users/casles/casles-object/javascript/Observer
44 error Darwin 16.3.0
45 error argv "/Users/casles/.nvm/versions/node/v7.3.0/bin/node" "/Users/casles/.nvm/versions/node/v7.3.0/bin/npm" "publish"
46 error node v7.3.0
47 error npm  v3.10.10
48 error code E403
49 error "You cannot publish over the previously published version 1.0.0." : dbind
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
